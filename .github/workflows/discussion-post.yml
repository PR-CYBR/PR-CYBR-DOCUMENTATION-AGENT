name: Post Discussion to GitHub

on:
  workflow_dispatch:
    inputs:
      discussion_title:
        description: 'Title of the discussion'
        required: true
        default: 'Default Title'
      discussion_body:
        description: 'Body of the discussion'
        required: true
        default: 'Default Body'
      category_id:
        description: 'Category ID for the discussion'
        required: true
        default: '<INSERT_DEFAULT_CATEGORY_ID>'

jobs:
  post-discussion:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up GitHub CLI
      uses: actions/setup-gh@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Repository ID
      id: get_repo_id
      run: |
        REPO_ID=$(gh api graphql -F owner='${{ github.repository_owner }}' \
          -F name='${{ github.event.repository.name }}' \
          --raw-field query='
            query ($owner: String!, $name: String!) {
              repository(owner: $owner, name: $name) {
                id
              }
            }' --jq '.data.repository.id')
        echo "REPO_ID=$REPO_ID" >> $GITHUB_ENV

    - name: Post Discussion
      run: |
        gh api graphql -F repositoryId="${REPO_ID}" \
          -F title="${{ github.event.inputs.discussion_title }}" \
          -F body="${{ github.event.inputs.discussion_body }}" \
          -F categoryId="${{ github.event.inputs.category_id }}" \
          --raw-field query='
            mutation ($repositoryId: ID!, $title: String!, $body: String!, $categoryId: ID!) {
              createDiscussion(input: {
                repositoryId: $repositoryId
                categoryId: $categoryId
                title: $title
                body: $body
              }) {
                discussion {
                  url
                }
              }
            }'